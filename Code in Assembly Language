
ORG 000H
SJMP INIT
ORG 003H  // starting address of interrupt service routine (ISR)
ACALL ISR // calls interrupt service routine
RETI

INIT: MOV P0,#00000000B
      MOV P3,#11111111B
      MOV P1,#00000000B
      MOV R6,#00000000B
      MOV DPTR,#LUT
      SETB IP.0     // sets highest priority for the interrupt INT0
      SETB TCON.0   // interrupt generated by a falling edge signal at INT0 pin
      SETB IE.0     //enables the external interrupt
      SETB IE.7     //enables the global interrupt control

MAIN: MOV A,R6
      MOV B,#100D
      DIV AB
      ACALL DISPLAY
      SETB P1.0
      ACALL DELAY
      ACALL DELAY
      MOV A,B
      MOV B,#10D
      DIV AB
      ACALL DISPLAY
      CLR P1.0
      SETB P1.1
      ACALL DELAY
      ACALL DELAY
      MOV A,B
      ACALL DISPLAY
      CLR P1.1
      SETB P1.2
      ACALL DELAY
      ACALL DELAY
      CLR P1.2
      SJMP MAIN

ISR: INC R6     //interrupt service routine
     RET

DISPLAY: MOVC A,@A+DPTR // display sub routine
         CPL A
         MOV P0,A
         RET

DELAY: MOV R3,#255D  // 1mS delay
LABEL: DJNZ R3,LABEL
       RET
LUT: DB 3FH
     DB 06H
     DB 5BH
     DB 4FH
     DB 66H
     DB 6DH
     DB 7DH
     DB 07H
     DB 7FH
     DB 6FH
END



The program is written so that, it keeps displaying the current value in register R6 on the three digit seven segment display. 
When ever there is a valid negative going pulse (interrupt) at the INT0 pin, the program branches to the interrupt service routine 
(sub routine ISR). Subroutine ISR increments the value in register R6, then jumps back to the MAIN loop and the display gets updated by the new value.
